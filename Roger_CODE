import random
import arcade
import os

SPRITE_SCALING = 0.5

SCREEN_WIDTH = 800
SCREEN_HEIGHT = 600
SCREEN_TITLE = "Escape From Zombies"

# player speed
MOVEMENT_SPEED = 5


class MyGame(arcade.Window):
    """
    Main application class.
    """

    def __init__(self, width, height, title):
        """
        Initializer
        """

        # Call the parent class initializer
        super().__init__(width, height, title)

        arcade.set_background_color(arcade.color.BLACK_LEATHER_JACKET)

        # player
        self.player = arcade.Sprite(center_x=100, center_y=100)
        self.player.texture = arcade.make_soft_circle_texture(50, arcade.color.BLACK, center_alpha=100, outer_alpha=100)

        # enemy
        self.enemy_texture = arcade.make_soft_square_texture(50, arcade.color.GREEN, outer_alpha=255)
        self.enemies = arcade.SpriteList()

        # aim
        self.aim_x = 500
        self.aim_y = 500

        # bullet
        self.bullet_texture = arcade.make_soft_circle_texture(20, arcade.color.TIMBERWOLF, center_alpha=225, outer_alpha=255)
        self.bullet_texture = arcade.make_soft_circle_texture(20, arcade.color.TIMBERWOLF, center_alpha=225, outer_alpha=255)
        self.bullets = arcade.SpriteList()


        # create an enemy
        for _ in range(10):
            enemy = arcade.Sprite()
            enemy.center_x = random.randrange(0, SCREEN_WIDTH)
            enemy.center_y = random.randrange(SCREEN_HEIGHT // 2, SCREEN_HEIGHT)
            enemy.texture = self.enemy_texture
            self.enemies.append(enemy)

    def on_draw(self):
        """
        Render the screen.
        """

        # This command has to happen before we start drawing
        arcade.start_render()

        #forest
        arcade.draw_rectangle_filled(300, 300, 1000, 200, arcade.color.BLUE, 0)


        # Draw all the sprites.
        self.player.draw()
        self.enemies.draw()

        #bullet
        self.bullets.draw()


        # aim
        arcade.draw_circle_outline(self.aim_x, self.aim_y, 25, arcade.color.YELLOW, 2, 20)

    def on_key_press(self, key, modifiers):

        if key == arcade.key.W or key == arcade.key.UP:
            self.player.change_y = MOVEMENT_SPEED
        elif key == arcade.key.S or key == arcade.key.DOWN:
            self.player.change_y = -MOVEMENT_SPEED
        elif key == arcade.key.A or key == arcade.key.LEFT:
            self.player.change_x = -MOVEMENT_SPEED
        elif key == arcade.key.D or key == arcade.key.RIGHT:
            self.player.change_x = MOVEMENT_SPEED

    def on_key_release(self, key, modifiers):

        if key == arcade.key.W or key == arcade.key.S or key == arcade.key.UP or key == arcade.key.DOWN:
            self.player.change_y = 0
        elif key == arcade.key.A or key == arcade.key.D or key == arcade.key.LEFT or key == arcade.key.RIGHT:
            self.player.change_x = 0

    def on_update(self, delta_time):

        # all updates of sprites
        self.bullets.update()
        self.player.update()

        for enemy in self.enemies:
            bullets_in_contact = enemy.collides_with_list(self.bullets)
            if bullets_in_contact:
                enemy.kill()
                for bullet in bullets_in_contact:
                    bullet.kill()

    def on_mouse_press(self, x, y, button, key_modifiers):
        bullet = arcade.Sprite()
        bullet.center_x = self.aim_x
        bullet.center_y = self.aim_y
        bullet.texture = self.bullet_texture
        self.bullets.append(bullet)

    def on_mouse_motion(self, x: float, y: float, dx: float, dy: float):
        self.aim_x = x
        self.aim_y = y


def main():
    """ Main method """
    window = MyGame(SCREEN_WIDTH, SCREEN_HEIGHT, SCREEN_TITLE)
    arcade.run()


if __name__ == "__main__":
    main()
